<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1a.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAA
        sQAAALEBxi1JjQAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAFwSURBVEhLvdS9
        K0dRHMfx67FMZhaFwcBisolYSZgoi0FRMtikyMrI6M9g91Ae8jApxOChbPIsivfnHL/ldu695/xcPvWq
        7/f263du557viTxSglJb5pdazOEAr/jCCzYwiWoUnSk8YR0jaEY9WjGOXdyhD8FZxjU6TOeOtmwYD5jQ
        A9/oza9QZ7rstOERXabLiPZcP243nX/GcIFy06VEH3TNlkEpwxkGTJeSQwzZMjgLWLWlOzrjOoJNpguP
        TtO+Ld2pgM55jenC04lTWybnGS22DM4gtm2ZHE3oqC2DswjNT2o0/pu2DEolbtFtupTobtH4Zx63WGaw
        A013ZnQa7qE7xye9+ICmv0EPfKK7RROt76EhcqUKs/iETp8ELaK7ReN/gnn0QFdIP5ZwA22L/rSwQPAi
        ulv0PTShezjHFlZQuNz0Z79axCe6eS8RX6QRueVfFnFt1xFyTXyRNySdxKKjRY7xjmk9+Kv8vHkUfQMF
        lFmsQIkn0gAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="pictureBoxa.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        kliyfYwa9X/vbWvHNX4QfwAAAABJRU5ErkJggg==
</value>
  </data>
</root>